package com.fazrigading.gui;

import com.fazrigading.agenda.Config;
import com.fazrigading.agenda.Priority;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.ImageIcon;
import net.proteanit.sql.DbUtils;

public class Program extends javax.swing.JFrame implements Priority {

    private int id = 0;
    private String privasi;

    private void show_data() {
        DefaultTableModel table_model = (DefaultTableModel) daftarKegiatan.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        for (int i = 0; i <= 5; i++) {
            if (i != 4) {
                daftarKegiatan.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        }

        try {
            Connection con = (Connection) Config.configDB();
            Statement stm = con.createStatement();
            table_model.setRowCount(0);

            if (pribadiBox.isSelected()) {
                ResultSet resUser = stm.executeQuery("SELECT * FROM " + Login.pengguna);
                while (resUser.next()) {
                    String sid = resUser.getString("ID");
                    String tipe = resUser.getString("Tipe");
                    String tanggal = resUser.getString("Tanggal");
                    String waktu = resUser.getString("Waktu");
                    String kegiatan = resUser.getString("Kegiatan");
                    String prioritas = resUser.getString("Prioritas");
                    String data[] = {sid, tipe, tanggal, waktu, kegiatan, prioritas};
                    table_model.addRow(data);
                }

            } else if (publikBox.isSelected()) {
                ResultSet res = stm.executeQuery("SELECT * FROM kegiatanbersama");
                while (res.next()) {
                    String sid = res.getString("ID");
                    String tipe = res.getString("Tipe");
                    String tanggal = res.getString("Tanggal");
                    String waktu = res.getString("Waktu");
                    String kegiatan = res.getString("Kegiatan");
                    String prioritas = res.getString("Prioritas");
                    String data2[] = {sid, tipe, tanggal, waktu, kegiatan, prioritas};
                    table_model.addRow(data2);
                }
            }

        } catch (SQLException e) {
            System.out.println("Masalahnya di fungsi show_data");
            System.out.println(e.getMessage());
        }

    }

    private void clear_form() {
        kegiatanBox.setText("Nama Kegiatan");
        jamBox.setValue("00");
        menitBox.setValue("00");
        tipeBox.setSelectedIndex(0);
        prioritas1.clearSelection();
        prioritas2.clearSelection();
        tanggalBox.setEnabled(false);
        tanggalBox.setEnabled(true);
    }

    @Override
    public String prioritasnya(boolean a, boolean b, boolean c, boolean d) {
        String prioritas = null;
        if (pentingBox.isSelected() && dadakBox.isSelected()) {
            prioritas = "1";
        } else if (pentingBox.isSelected() && tdkdadakBox.isSelected()) {
            prioritas = "2";
        } else if (tdkpentingBox.isSelected() && dadakBox.isSelected()) {
            prioritas = "3";
        } else if (tdkpentingBox.isSelected() && tdkdadakBox.isSelected()) {
            prioritas = "4";
        }
        return prioritas;
    }

    public Program() {
        initComponents();
        show_data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prioritas1 = new javax.swing.ButtonGroup();
        prioritas2 = new javax.swing.ButtonGroup();
        privasiGroup = new javax.swing.ButtonGroup();
        background = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        judulProgram = new javax.swing.JLabel();
        kegiatanBox = new javax.swing.JTextField();
        tipeBox = new javax.swing.JComboBox<>();
        pentingBox = new javax.swing.JRadioButton();
        tdkpentingBox = new javax.swing.JRadioButton();
        dadakBox = new javax.swing.JRadioButton();
        tdkdadakBox = new javax.swing.JRadioButton();
        tambahBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        hapusBtn = new javax.swing.JButton();
        jamBox = new javax.swing.JSpinner();
        menitBox = new javax.swing.JSpinner();
        pribadiBox = new javax.swing.JCheckBox();
        publikBox = new javax.swing.JCheckBox();
        tanggalBox = new com.toedter.calendar.JCalendar();
        logoutBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarKegiatan = new javax.swing.JTable();
        cariBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kalender Kegiatan by. fazrigading");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        background.setBackground(new java.awt.Color(186, 219, 255));
        background.setRequestFocusEnabled(false);

        panel.setBackground(new java.awt.Color(112, 180, 255));
        panel.setPreferredSize(new java.awt.Dimension(253, 540));

        judulProgram.setFont(new java.awt.Font("Museo Sans Cyrl 900", 0, 20)); // NOI18N
        judulProgram.setForeground(new java.awt.Color(255, 255, 255));
        judulProgram.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        judulProgram.setText("Kalender Kegiatan");
        judulProgram.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        kegiatanBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        kegiatanBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        kegiatanBox.setText("Nama Kegiatan");
        kegiatanBox.setActionCommand("<Not Set>");
        kegiatanBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        kegiatanBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kegiatanBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kegiatanBoxFocusLost(evt);
            }
        });

        tipeBox.setEditable(true);
        tipeBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tipeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tugas", "Kuliah", "Rapat", "Kerja" }));
        tipeBox.setToolTipText("");
        tipeBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pentingBox.setBackground(new java.awt.Color(112, 180, 255));
        prioritas1.add(pentingBox);
        pentingBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        pentingBox.setForeground(new java.awt.Color(255, 255, 255));
        pentingBox.setText("Penting");

        tdkpentingBox.setBackground(new java.awt.Color(112, 180, 255));
        prioritas1.add(tdkpentingBox);
        tdkpentingBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tdkpentingBox.setForeground(new java.awt.Color(255, 255, 255));
        tdkpentingBox.setText("Tidak Penting");

        dadakBox.setBackground(new java.awt.Color(112, 180, 255));
        prioritas2.add(dadakBox);
        dadakBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        dadakBox.setForeground(new java.awt.Color(255, 255, 255));
        dadakBox.setText("Mendadak");

        tdkdadakBox.setBackground(new java.awt.Color(112, 180, 255));
        prioritas2.add(tdkdadakBox);
        tdkdadakBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tdkdadakBox.setForeground(new java.awt.Color(255, 255, 255));
        tdkdadakBox.setText("Tidak Mendadak");

        tambahBtn.setBackground(new java.awt.Color(91, 170, 255));
        tambahBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tambahBtn.setForeground(new java.awt.Color(255, 255, 255));
        tambahBtn.setText("Tambah");
        tambahBtn.setBorder(null);
        tambahBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tambahBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tambahBtnMouseExited(evt);
            }
        });
        tambahBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(91, 170, 255));
        editBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Perbarui");
        editBtn.setBorder(null);
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editBtnMouseExited(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        hapusBtn.setBackground(new java.awt.Color(91, 170, 255));
        hapusBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hapusBtn.setForeground(new java.awt.Color(255, 255, 255));
        hapusBtn.setText("Hapus");
        hapusBtn.setBorder(null);
        hapusBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hapusBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hapusBtnMouseExited(evt);
            }
        });
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });

        jamBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jamBox.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"}));
        jamBox.setPreferredSize(new java.awt.Dimension(36, 22));

        menitBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        menitBox.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));
        menitBox.setPreferredSize(new java.awt.Dimension(36, 22));

        pribadiBox.setBackground(new java.awt.Color(91, 170, 255));
        privasiGroup.add(pribadiBox);
        pribadiBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        pribadiBox.setForeground(new java.awt.Color(255, 255, 255));
        pribadiBox.setSelected(true);
        pribadiBox.setText("Pribadi");
        pribadiBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pribadiBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pribadiBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pribadiBoxActionPerformed(evt);
            }
        });

        publikBox.setBackground(new java.awt.Color(91, 170, 255));
        privasiGroup.add(publikBox);
        publikBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        publikBox.setForeground(new java.awt.Color(255, 255, 255));
        publikBox.setText("Publik");
        publikBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        publikBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publikBoxActionPerformed(evt);
            }
        });

        tanggalBox.setDecorationBackgroundColor(new java.awt.Color(91, 170, 255));
        tanggalBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tanggalBox.setSundayForeground(new java.awt.Color(0, 102, 214));
        tanggalBox.setTodayButtonText("Hari Ini");
        tanggalBox.setTodayButtonVisible(true);
        tanggalBox.setWeekOfYearVisible(false);
        tanggalBox.setWeekdayForeground(new java.awt.Color(255, 255, 255));

        logoutBtn.setBackground(new java.awt.Color(91, 170, 255));
        logoutBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutBtn.setText("Log Out");
        logoutBtn.setBorder(null);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tambahBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(hapusBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addComponent(pribadiBox, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(publikBox, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(kegiatanBox)
                        .addContainerGap())
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pentingBox)
                            .addComponent(dadakBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tdkpentingBox)
                            .addComponent(tdkdadakBox))
                        .addGap(10, 10, 10))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tanggalBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(tipeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jamBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menitBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(judulProgram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judulProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pribadiBox)
                        .addComponent(publikBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tanggalBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jamBox, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(menitBox, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kegiatanBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pentingBox)
                    .addComponent(tdkpentingBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dadakBox)
                    .addComponent(tdkdadakBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tambahBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(hapusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        daftarKegiatan.setBackground(new java.awt.Color(186, 219, 255));
        daftarKegiatan.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        daftarKegiatan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipe", "Tanggal", "Waktu", "Kegiatan", "Prioritas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        daftarKegiatan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        daftarKegiatan.setGridColor(new java.awt.Color(255, 255, 255));
        daftarKegiatan.setRowHeight(28);
        daftarKegiatan.setRowMargin(4);
        daftarKegiatan.setSelectionBackground(new java.awt.Color(84, 164, 249));
        daftarKegiatan.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        daftarKegiatan.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        daftarKegiatan.setShowGrid(true);
        daftarKegiatan.getTableHeader().setReorderingAllowed(false);
        daftarKegiatan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                daftarKegiatanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(daftarKegiatan);
        if (daftarKegiatan.getColumnModel().getColumnCount() > 0) {
            daftarKegiatan.getColumnModel().getColumn(0).setMinWidth(30);
            daftarKegiatan.getColumnModel().getColumn(0).setPreferredWidth(30);
            daftarKegiatan.getColumnModel().getColumn(0).setMaxWidth(30);
            daftarKegiatan.getColumnModel().getColumn(1).setMinWidth(60);
            daftarKegiatan.getColumnModel().getColumn(1).setPreferredWidth(60);
            daftarKegiatan.getColumnModel().getColumn(1).setMaxWidth(158);
            daftarKegiatan.getColumnModel().getColumn(2).setMinWidth(70);
            daftarKegiatan.getColumnModel().getColumn(2).setPreferredWidth(70);
            daftarKegiatan.getColumnModel().getColumn(2).setMaxWidth(70);
            daftarKegiatan.getColumnModel().getColumn(3).setMinWidth(50);
            daftarKegiatan.getColumnModel().getColumn(3).setPreferredWidth(50);
            daftarKegiatan.getColumnModel().getColumn(3).setMaxWidth(50);
            daftarKegiatan.getColumnModel().getColumn(4).setMinWidth(100);
            daftarKegiatan.getColumnModel().getColumn(4).setPreferredWidth(258);
            daftarKegiatan.getColumnModel().getColumn(4).setMaxWidth(258);
            daftarKegiatan.getColumnModel().getColumn(5).setMinWidth(60);
            daftarKegiatan.getColumnModel().getColumn(5).setPreferredWidth(60);
            daftarKegiatan.getColumnModel().getColumn(5).setMaxWidth(60);
        }

        cariBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cariBox.setText("Cari Kegiatan...");
        cariBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cariBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cariBoxFocusLost(evt);
            }
        });
        cariBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cariBoxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                    .addComponent(cariBox))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cariBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void kegiatanBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kegiatanBoxFocusLost
        // TODO add your handling code here:
        if (kegiatanBox.getText().equals("")) {
            kegiatanBox.setText("Nama Kegiatan");
        }
    }//GEN-LAST:event_kegiatanBoxFocusLost

    private void kegiatanBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kegiatanBoxFocusGained
        // TODO add your handling code here:
        if (kegiatanBox.getText().equals("Nama Kegiatan")) {
            kegiatanBox.setText("");
        }
    }//GEN-LAST:event_kegiatanBoxFocusGained

    private void tambahBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahBtnMouseEntered
        // TODO add your handling code here:
        Color color = new Color(68, 153, 244);
        tambahBtn.setBackground(color);
    }//GEN-LAST:event_tambahBtnMouseEntered

    private void tambahBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahBtnMouseExited
        // TODO add your handling code here:
        Color color = new Color(91, 170, 255);
        tambahBtn.setBackground(color);
    }//GEN-LAST:event_tambahBtnMouseExited

    private void editBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseEntered
        // TODO add your handling code here:
        Color color = new Color(68, 153, 244);
        editBtn.setBackground(color);
    }//GEN-LAST:event_editBtnMouseEntered

    private void editBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseExited
        // TODO add your handling code here:
        Color color = new Color(91, 170, 255);
        editBtn.setBackground(color);
    }//GEN-LAST:event_editBtnMouseExited

    private void hapusBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusBtnMouseEntered
        // TODO add your handling code here:
        Color color = new Color(68, 153, 244);
        hapusBtn.setBackground(color);
    }//GEN-LAST:event_hapusBtnMouseEntered

    private void hapusBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusBtnMouseExited
        // TODO add your handling code here:
        Color color = new Color(91, 170, 255);
        hapusBtn.setBackground(color);
    }//GEN-LAST:event_hapusBtnMouseExited

    private void tambahBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahBtnActionPerformed
        // TODO add your handling code here:
        boolean priorSelected1 = pentingBox.isSelected() || tdkpentingBox.isSelected();
        boolean priorSelected2 = dadakBox.isSelected() || tdkdadakBox.isSelected();
        boolean priorSelected = priorSelected1 && priorSelected2;

        final String formattanggal = "yyyy-MM-dd";
        SimpleDateFormat sdf = new SimpleDateFormat(formattanggal);
        String tipe = String.valueOf(tipeBox.getSelectedItem());
        String date = sdf.format(tanggalBox.getDate());
        String jam = String.valueOf(jamBox.getValue());
        String menit = String.valueOf(menitBox.getValue());
        String waktu = String.join(":", jam, menit);
        String kegiatan = kegiatanBox.getText();
        String prioritas;

        if (pribadiBox.isSelected()) {
            privasi = Login.pengguna;
        } else if (publikBox.isSelected()) {
            privasi = "kegiatanbersama";
        }

        String prior = prioritasnya(pentingBox.isSelected(), dadakBox.isSelected(), tdkpentingBox.isSelected(), tdkdadakBox.isSelected());

        if (priorSelected == true && !(kegiatan.equals("Nama Kegiatan"))) {
            prioritas = prior;
            try {
                String sql = "INSERT INTO " + privasi + " (Tipe, Tanggal, Waktu, Kegiatan, Prioritas) VALUES ('" + tipe + "', '" + date + "', '" + waktu + "', '" + kegiatan + "', '" + prioritas + "')";
                Connection con = (Connection) Config.configDB();
                PreparedStatement pstm = con.prepareStatement(sql);
                pstm.execute();
                clear_form();
                show_data();
            } catch (SQLException e) {
                System.out.println("Masalahnya di Tombol Tambah");
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon lengkapi data.");
        }
    }//GEN-LAST:event_tambahBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        boolean priorSelected1 = pentingBox.isSelected() || tdkpentingBox.isSelected();
        boolean priorSelected2 = dadakBox.isSelected() || tdkdadakBox.isSelected();
        boolean priorSelected = priorSelected1 && priorSelected2;

        String tipe = String.valueOf(tipeBox.getSelectedItem());
        final String formattanggal = "yyyy-MM-dd";
        SimpleDateFormat sdf = new SimpleDateFormat(formattanggal);
        String date = sdf.format(tanggalBox.getDate());
        String jam = String.valueOf(jamBox.getValue());
        String menit = String.valueOf(menitBox.getValue());
        String waktu = String.join(":", jam, menit);
        String kegiatan = kegiatanBox.getText();
        String prioritas;

        if (pribadiBox.isSelected()) {
            privasi = Login.pengguna;
        } else if (publikBox.isSelected()) {
            privasi = "kegiatanbersama";
        }

        String prior = prioritasnya(pentingBox.isSelected(), dadakBox.isSelected(), tdkpentingBox.isSelected(), tdkdadakBox.isSelected());

        if (priorSelected == true && !(kegiatan.equals("Nama Kegiatan"))) {
            prioritas = prior;
            try {
                String sql = "UPDATE " + privasi + " SET ID='" + id + "', Tipe='" + tipe + "', Tanggal='" + date + "', Waktu='" + waktu + "', Kegiatan='" + kegiatan + "', Prioritas='" + prioritas + "' WHERE ID='" + id + "'";
                Connection con = (Connection) Config.configDB();
                PreparedStatement pstm = con.prepareStatement(sql);
                pstm.execute();
                clear_form();
                show_data();
            } catch (SQLException e) {
                System.out.println("Masalahnya di Tombol Edit");
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu.");
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
        if (pribadiBox.isSelected()) {
            privasi = Login.pengguna;
        } else if (publikBox.isSelected()) {
            privasi = "kegiatanbersama";
        }
        String kegiatan = kegiatanBox.getText();
        if (!(kegiatan.equals("Nama Kegiatan"))) {
            try {
                String sql = "DELETE FROM " + privasi + " WHERE ID='" + id + "'";
                Connection con = (Connection) Config.configDB();
                PreparedStatement pstm = con.prepareStatement(sql);
                pstm.execute();
                clear_form();
                show_data();
            } catch (SQLException e) {
                System.out.println("Masalahnya di Tombol Hapus");
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu.");
        }
    }//GEN-LAST:event_hapusBtnActionPerformed

    private void daftarKegiatanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarKegiatanMouseClicked
        int row = daftarKegiatan.getSelectedRow();
        if (row != -1) {
            try {
                String sid = daftarKegiatan.getValueAt(row, 0).toString();
                id = Integer.parseInt(sid);

                Object tipe = daftarKegiatan.getValueAt(row, 1);
                tipeBox.setSelectedItem(tipe);

                String olddate = (String) daftarKegiatan.getValueAt(row, 2);
                final String formattanggal = "yyyy-MM-dd";
                Date newdate = new SimpleDateFormat(formattanggal).parse(olddate);
                tanggalBox.setDate(newdate);

                String waktu = daftarKegiatan.getValueAt(row, 3).toString();
                String[] time = waktu.split(":");
                String jam = time[0];
                String menit = time[1];
                jamBox.setValue(jam);
                menitBox.setValue(menit);

                String kegiatan = daftarKegiatan.getValueAt(row, 4).toString();
                kegiatanBox.setText(kegiatan);

                String prioritas = daftarKegiatan.getValueAt(row, 5).toString();
                if (null != prioritas) {
                    switch (prioritas) {
                        case "1" -> {
                            pentingBox.doClick();
                            dadakBox.doClick();
                        }
                        case "2" -> {
                            pentingBox.doClick();
                            tdkdadakBox.doClick();
                        }
                        case "3" -> {
                            tdkpentingBox.doClick();
                            dadakBox.doClick();
                        }
                        case "4" -> {
                            tdkpentingBox.doClick();
                            tdkdadakBox.doClick();
                        }
                        default -> {
                        }
                    }
                }
            } catch (ParseException ex) {
                System.out.println(ex);
            }
        } else {
            clear_form();
        }
    }//GEN-LAST:event_daftarKegiatanMouseClicked

    private void pribadiBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pribadiBoxActionPerformed
        // TODO add your handling code here:
        clear_form();
        show_data();
    }//GEN-LAST:event_pribadiBoxActionPerformed

    private void publikBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publikBoxActionPerformed
        // TODO add your handling code here:
        clear_form();
        show_data();
    }//GEN-LAST:event_publikBoxActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        int confirmLogout = JOptionPane.showConfirmDialog(logoutBtn, "Keluar dari akun?", "Konfirmasi", 0);
        if (confirmLogout == JOptionPane.YES_OPTION) {
            dispose();
            new Login().setVisible(true);
        }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        ImageIcon icon = new ImageIcon("src/logo.png");
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated

    private void cariBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariBoxKeyReleased
        // TODO add your handling code here:
        if (pribadiBox.isSelected()) {
            privasi = Login.pengguna;
        } else if (publikBox.isSelected()) {
            privasi = "kegiatanbersama";
        }
        try {
            String searchQuery = "SELECT * FROM "+ privasi +" WHERE Kegiatan LIKE '%"+ cariBox.getText() +"%'";
            Connection con = (Connection) Config.configDB();
            Statement stm = con.createStatement();
            ResultSet res = stm.executeQuery(searchQuery);
            
            if (cariBox.getText().equals("")) {
                show_data();
            } else {
                daftarKegiatan.setModel(DbUtils.resultSetToTableModel(res)); 
                if (daftarKegiatan.getColumnModel().getColumnCount() > 0) {
                    daftarKegiatan.getColumnModel().getColumn(0).setMinWidth(30);
                    daftarKegiatan.getColumnModel().getColumn(0).setPreferredWidth(30);
                    daftarKegiatan.getColumnModel().getColumn(0).setMaxWidth(30);
                    daftarKegiatan.getColumnModel().getColumn(1).setMinWidth(60);
                    daftarKegiatan.getColumnModel().getColumn(1).setPreferredWidth(60);
                    daftarKegiatan.getColumnModel().getColumn(1).setMaxWidth(158);
                    daftarKegiatan.getColumnModel().getColumn(2).setMinWidth(70);
                    daftarKegiatan.getColumnModel().getColumn(2).setPreferredWidth(70);
                    daftarKegiatan.getColumnModel().getColumn(2).setMaxWidth(70);
                    daftarKegiatan.getColumnModel().getColumn(3).setMinWidth(50);
                    daftarKegiatan.getColumnModel().getColumn(3).setPreferredWidth(50);
                    daftarKegiatan.getColumnModel().getColumn(3).setMaxWidth(50);
                    daftarKegiatan.getColumnModel().getColumn(4).setMinWidth(100);
                    daftarKegiatan.getColumnModel().getColumn(4).setPreferredWidth(258);
                    daftarKegiatan.getColumnModel().getColumn(4).setMaxWidth(258);
                    daftarKegiatan.getColumnModel().getColumn(5).setMinWidth(60);
                    daftarKegiatan.getColumnModel().getColumn(5).setPreferredWidth(60);
                    daftarKegiatan.getColumnModel().getColumn(5).setMaxWidth(60);
                }
                clear_form();
            }
        } catch (SQLException e) {
            System.out.println("Masalahnya di Kotak Cari");
            System.out.println(e.getMessage());
        }
            
    }//GEN-LAST:event_cariBoxKeyReleased

    private void cariBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariBoxFocusGained
        // TODO add your handling code here:
        cariBox.setText("");
    }//GEN-LAST:event_cariBoxFocusGained

    private void cariBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariBoxFocusLost
        // TODO add your handling code here:
        cariBox.setText("Cari Kegiatan...");
    }//GEN-LAST:event_cariBoxFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JTextField cariBox;
    private javax.swing.JRadioButton dadakBox;
    private javax.swing.JTable daftarKegiatan;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton hapusBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jamBox;
    private javax.swing.JLabel judulProgram;
    private javax.swing.JTextField kegiatanBox;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JSpinner menitBox;
    private javax.swing.JPanel panel;
    private javax.swing.JRadioButton pentingBox;
    private javax.swing.JCheckBox pribadiBox;
    private javax.swing.ButtonGroup prioritas1;
    private javax.swing.ButtonGroup prioritas2;
    private javax.swing.ButtonGroup privasiGroup;
    private javax.swing.JCheckBox publikBox;
    private javax.swing.JButton tambahBtn;
    private com.toedter.calendar.JCalendar tanggalBox;
    private javax.swing.JRadioButton tdkdadakBox;
    private javax.swing.JRadioButton tdkpentingBox;
    private javax.swing.JComboBox<String> tipeBox;
    // End of variables declaration//GEN-END:variables

}
